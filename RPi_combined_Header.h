#ifndef RPI_COMBINED_HEADER_H
#define RPI_COMBINED_HEADER_H
////////////////////////////////////////////////////
// GLOBAL VARS DEFINITION

// #define TRUE 1
// #define FALSE 0

#define MAX_YEI_DATA_PACKET 255

#define DEGTORAD  0.017453f
#define RADTODEG 57.295779f

#define NO_SLOT	255
#define READ_TARED_ORIENTATION_AS_QUATERNION 0
#define READ_TARED_ORIENTATION_AS_EULER_ANGLES 1
#define READ_UNTARED_ORIENTATION_AS_QUATERNION 6
#define READ_UNTARED_ORIENTATION_AS_EULER_ANGLES 7
#define READ_NORMALIZED_ACCELEROMETER_VECTOR  34
#define READ_CORRECTED_GYROSCOPE_VECTOR   38
#define READ_CORRECTED_ACCELEROMETER_VECTOR   39
#define READ_CORRECTED_LINEAR_ACCELERATION    41
#define READ_RAW_GYROSCOPE_VECTOR 65
#define READ_RAW_ACCELEROMETER_VECTOR 66
#define	READ_RAW_COMPASS_VECTOR 67

#define CMD_SET_BASE_OFFSET_WITH_CURRENT_ORIENTATION 22
#define CMD_SET_STREAMING_SLOT 80
#define CMD_SET_STREAMING_TIMING 82
#define CMD_GET_STREAMING_BATCH 84
#define CMD_START_STREAMING 85
#define CMD_STOP_STREAMING 86
#define CMD_TARE_WITH_CURRENT_ORIENTATION 96
#define CMD_SET_REFERENCE_VECTOR_MODE 105
#define CMD_SET_COMPASS_ENABLE 109
#define CMD_RESET_FILTER 120
#define CMD_SET_ACCELEROMETER_RANGE 121
#define CMD_SET_FILTER_MODE 123
#define CMD_SET_GYROSCOPE_RANGE 125
#define CMD_SET_COMPASS_RANGE 126

#define CMD_GET_COMPASS_ENABLED_STATE 142
#define CMD_GET_ACCELEROMETER_RANGE 148
#define CMD_GET_FILTER_MODE 152
#define CMD_GET_GYROSCOPE_RANGE 154
#define CMD_GET_COMPASS_RANGE 155
#define CMD_BEGIN_GYROSCOPE_AUTOCALIBRATION 165
#define CMD_SET_CALIBRATION_MODE 169
#define CMD_RESPONSE_HEADER_BITFIELD 221
#define CMD_SET_UART_BAUD_RATE 231
#define CMD_GET_UART_BAUD_RATE 232
#define START_SPI_DATA_TRANSFER 0xF6
#define START_NO_RESP_HEADER 0xF7
#define START_RESP_HEADER 0xF9

#define SPI_IDLE_STATE 0x00
#define SPI_READY_STATE 0x01
#define SPI_BUSY_STATE 0x02
#define SPI_ACC_STATE 0x04
#define DELAY_SPI_YEI 5 //[us]
#define DELAY_WAIT_SERIAL_YEI 1 //[us]
#define DELAY_SERIAL_YEI 10 //[us]

#define REFERENCE_VECTOR_SINGLE_STATIC_MODE 0
#define REFERENCE_VECTOR_SINGLE_AUTO_MODE 1
#define REFERENCE_VECTOR_SINGLE_AUTO_CONTINUOUS_MODE 2
#define REFERENCE_VECTOR_MULTI_REFERENCE_MODE 3

#define ACCELEROMETER_RANGE_2G 0
#define ACCELEROMETER_RANGE_4G 1
#define ACCELEROMETER_RANGE_8G 2

#define GYROSCOPE_RANGE_250 0
#define GYROSCOPE_RANGE_500 1
#define GYROSCOPE_RANGE_2000 2

#define COMPASS_RANGE_0_8 0
#define COMPASS_RANGE_1_3 1
#define COMPASS_RANGE_1_9 2
#define COMPASS_RANGE_2_5 3
#define COMPASS_RANGE_4_0 4
#define COMPASS_RANGE_4_7 5
#define COMPASS_RANGE_5_6 6
#define COMPASS_RANGE_8_1 7

#define FILTER_IMU 0
#define FILTER_KALMAN 1
#define FILTER_KALMAN_ALTERNATING 2
#define FILTER_COMPLEMENTARY 3
#define FILTER_QUATERNION_GRADIENT_DESCEND 4
#define FILTER_MAGNETORESISTIVE_QUATERNION_GRADIENT_DESCEND 5

#define CALIBRATION_MODE_BIAS 0
#define CALIBRATION_MODE_BIAS_SCALE 1
#define CALIBRATION_MODE_ORTHO 2

#define CMD_SET_AXIS_DIRECTIONS 116
#define AXIS_XR_YF_ZU 0x01 // Right-handed system
#define AXIS_XU_YR_ZF 0x02
#define AXIS_XF_YU_ZR 0x05

#define CMD_GET_FIRMWARE_VERSION 0xDF
#define CMD_GET_HARDWARE_VERSION 0xE6

#define YEI_DELAY_AFTER_COMMAND 100 //[ms]

#define debug_LED 11 // BCM pins


// MULTIPLEXER (BCM pin label)
#define PIN_ENABLE 13
#define PIN_A      14
#define PIN_B      16
#define PIN_C      15

// ADC - MCP3221
#define ADCAddress 0x4D
/*static*/ int ADCModule;

/*static*/ uint8_t YEIdataPacket[MAX_YEI_DATA_PACKET];
/*static*/ int UART1;
/*static*/ int IMU;
/*static*/ bool led_state = 0;

// PRESSURE SENSORS
// Curve Fitting Coefficient
const float coef1[] = {4.9623, 4.9715, 4.5513, 4.9613, 5.0471, 4.8370, 4.7539, 4.8434}; // Multiply by 10000
const float coef2[] = {22.869, 28.117, 22.400, 21.504, 26.127, 22.159, 25.630, 22.922}; // Multiply by 1000
const uint16_t segmentpoint = 2324; //581; // FACTOR OF 4 (10-BIT TO 12-BIT RES)
static uint16_t p[] = {0, 0, 0, 0, 0, 0, 0, 0};
static uint16_t offset_p[] = {0, 0, 0, 0, 0, 0, 0, 0};

static uint8_t currBuff;
static uint8_t prevBuff;
static bool readyToWrite;
static bool IMUDataReady;

#endif